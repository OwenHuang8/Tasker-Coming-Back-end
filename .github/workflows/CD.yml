name: Build and Deploy to AWS

run-name: Building and deploying to AWS ECS

on:
  push:
    branches:
    - main
  workflow_dispatch:

permissions:
   contents: read       # This is required for actions/checkout@v3
   actions: read        # This is required for aws-actions/configure-aws-credentials@v1-node16
   id-token: write      # This is required for aws-actions/configure-aws-credentials@v1-node16
   
jobs:
  build-push-image-deployECS:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::062550047379:role/github-actions-OIDC
          aws-region: ap-southeast-2
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        id: build-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: backendecr
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "image=$REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
          
      - name: Render Amazon ECS task definition
        id: render-backend-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1     
        with:
          task-definition: task-definition.json
          container-name: backend
          image: ${{ steps.build-image.outputs.image }}
          environment-variables: |
              PORT=${{ secrets.PORT }}
              JWT_LIFETIME=${{ secrets.JWT_LIFETIME }}
              MONGO_URI=${{ secrets.MONGO_URI }}
              JWT_SECRET=${{ secrets.JWT_SECRET }}
        
      - name: Deploy to Amazon ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-backend-container.outputs.task-definition }}
          service: backend
          cluster: backend
